{"ast":null,"code":"var _jsxFileName = \"/Users/test/dev/ReactReadMore/src/components/RegisterYourCatForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"white\", \"red\", \"blue\", \"black\", \"cream\"];\nexport default function RegisterYourCatForm() {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    color: \"\",\n    age: \"\",\n    habits: \"\"\n  });\n\n  const saveFormData = async () => {\n    const response = await fetch(\"/api/registration\", {\n      method: \"POST\",\n      body: JSON.stringify(values)\n    });\n\n    if (response.status !== 200) {\n      throw new Error(`Request failed: ${response.status}`);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault(); // Prevent default submission\n\n    try {\n      await saveFormData();\n      alert(\"Your registration was successfully submitted!\");\n      setValues({\n        name: \"\",\n        color: \"\",\n        age: \"\",\n        habits: \"\"\n      });\n    } catch (e) {\n      alert(`Registration failed! ${e.message}`);\n    }\n  };\n\n  const set = name => {\n    return ({\n      target: {\n        value\n      }\n    }) => {\n      setValues(oldValues => ({ ...oldValues,\n        [name]: value\n      }));\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Your Cat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name*:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: true,\n      value: values.name,\n      onChange: set(\"name\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Color*:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      requiredvalue: values.color,\n      onChange: set(\"color\"),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), COLORS.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: c\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Age*:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      tabIndex: \"0\",\n      type: \"number\",\n      required: true,\n      min: \"1\",\n      value: values.age,\n      onChange: set(\"age\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Habits:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: values.habits,\n      onChange: set(\"habits\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterYourCatForm, \"SEH3omzp9VMPEo3wUpGv/icxlfc=\");\n\n_c = RegisterYourCatForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterYourCatForm\");","map":{"version":3,"sources":["/Users/test/dev/ReactReadMore/src/components/RegisterYourCatForm.js"],"names":["useState","COLORS","RegisterYourCatForm","values","setValues","name","color","age","habits","saveFormData","response","fetch","method","body","JSON","stringify","status","Error","onSubmit","event","preventDefault","alert","e","message","set","target","value","oldValues","map","c"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst COLORS = [\"white\", \"red\", \"blue\", \"black\", \"cream\"];\n\nexport default function RegisterYourCatForm() {\n  const [values, setValues] = useState({\n    name: \"\",\n    color: \"\",\n    age: \"\",\n    habits: \"\",\n  });\n  const saveFormData = async () => {\n    const response = await fetch(\"/api/registration\", {\n      method: \"POST\",\n      body: JSON.stringify(values),\n    });\n    if (response.status !== 200) {\n      throw new Error(`Request failed: ${response.status}`);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault(); // Prevent default submission\n    try {\n      await saveFormData();\n      alert(\"Your registration was successfully submitted!\");\n      setValues({\n        name: \"\",\n        color: \"\",\n        age: \"\",\n        habits: \"\",\n      });\n    } catch (e) {\n      alert(`Registration failed! ${e.message}`);\n    }\n  };\n\n  const set = (name) => {\n    return ({ target: { value } }) => {\n      setValues((oldValues) => ({ ...oldValues, [name]: value }));\n    };\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2>Register Your Cat</h2>\n\n      <label>Name*:</label>\n      <input type=\"text\" required value={values.name} onChange={set(\"name\")} />\n\n      <label>Color*:</label>\n      <select requiredvalue={values.color} onChange={set(\"color\")}>\n        <option value=\"\">Select color</option>\n        {COLORS.map((c) => (\n          <option key={c}>{c}</option>\n        ))}\n      </select>\n\n      <label>Age*:</label>\n      <input\n        tabIndex=\"0\"\n        type=\"number\"\n        required\n        min=\"1\"\n        value={values.age}\n        onChange={set(\"age\")}\n      />\n\n      <label>Habits:</label>\n      <textarea value={values.habits} onChange={set(\"habits\")} />\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}