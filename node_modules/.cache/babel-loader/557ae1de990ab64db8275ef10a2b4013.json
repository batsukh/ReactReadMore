{"ast":null,"code":"var _jsxFileName = \"/Users/test/dev/ReactReadMore/src/components/RegisterYourCatForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"white\", \"red\", \"blue\", \"black\", \"cream\"];\n\nfunction RegisterYourCatForm() {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    color: \"\",\n    age: \"\",\n    habits: \"\"\n  });\n\n  const saveFormData = async () => {\n    const response = await fetch(\"/api/registration\", {\n      method: \"POST\",\n      body: JSON.stringify(values)\n    });\n\n    if (response.status !== 200) {\n      throw new Error(`Request failed: ${response.status}`);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault(); // Prevent default submission\n\n    try {\n      await saveFormData();\n      alert(\"Your registration was successfully submitted!\");\n      setValues({\n        name: \"\",\n        color: \"\",\n        age: \"\",\n        habits: \"\"\n      });\n    } catch (e) {\n      alert(`Registration failed! ${e.message}`);\n    }\n  }; // ...\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n\n_s(RegisterYourCatForm, \"SEH3omzp9VMPEo3wUpGv/icxlfc=\");\n\n_c = RegisterYourCatForm;\nexport default RegisterYourCatForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterYourCatForm\");","map":{"version":3,"sources":["/Users/test/dev/ReactReadMore/src/components/RegisterYourCatForm.js"],"names":["React","COLORS","RegisterYourCatForm","values","setValues","useState","name","color","age","habits","saveFormData","response","fetch","method","body","JSON","stringify","status","Error","onSubmit","event","preventDefault","alert","e","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,OAAlC,CAAf;;AAEA,SAASC,mBAAT,GAA+B;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC;AACnCC,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,GAAG,EAAE,EAH8B;AAInCC,IAAAA,MAAM,EAAE;AAJ2B,GAAD,CAApC;;AAOA,QAAMC,YAAY,GAAG,YAAY;AAC/B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAD,EAAsB;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,MAAf;AAF0C,KAAtB,CAA5B;;AAIA,QAAIQ,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAM,IAAIC,KAAJ,CAAW,mBAAkBP,QAAQ,CAACM,MAAO,EAA7C,CAAN;AACD;AACF,GARD;;AAUA,QAAME,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACC,cAAN,GADgC,CACR;;AACxB,QAAI;AACF,YAAMX,YAAY,EAAlB;AACAY,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACAlB,MAAAA,SAAS,CAAC;AACRE,QAAAA,IAAI,EAAE,EADE;AAERC,QAAAA,KAAK,EAAE,EAFC;AAGRC,QAAAA,GAAG,EAAE,EAHG;AAIRC,QAAAA,MAAM,EAAE;AAJA,OAAD,CAAT;AAMD,KATD,CASE,OAAOc,CAAP,EAAU;AACVD,MAAAA,KAAK,CAAE,wBAAuBC,CAAC,CAACC,OAAQ,EAAnC,CAAL;AACD;AACF,GAdD,CAlB6B,CAkC7B;;;AAEA,sBAAO;AAAM,IAAA,QAAQ,EAAEL;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GArCQjB,mB;;KAAAA,mB;AAsCT,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\n\nconst COLORS = [\"white\", \"red\", \"blue\", \"black\", \"cream\"];\n\nfunction RegisterYourCatForm() {\n  const [values, setValues] = useState({\n    name: \"\",\n    color: \"\",\n    age: \"\",\n    habits: \"\",\n  });\n\n  const saveFormData = async () => {\n    const response = await fetch(\"/api/registration\", {\n      method: \"POST\",\n      body: JSON.stringify(values),\n    });\n    if (response.status !== 200) {\n      throw new Error(`Request failed: ${response.status}`);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault(); // Prevent default submission\n    try {\n      await saveFormData();\n      alert(\"Your registration was successfully submitted!\");\n      setValues({\n        name: \"\",\n        color: \"\",\n        age: \"\",\n        habits: \"\",\n      });\n    } catch (e) {\n      alert(`Registration failed! ${e.message}`);\n    }\n  };\n\n  // ...\n\n  return <form onSubmit={onSubmit}>{/* ... */}</form>;\n}\nexport default RegisterYourCatForm;\n"]},"metadata":{},"sourceType":"module"}